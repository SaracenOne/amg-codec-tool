#############################################################################
# Makefile for building: amg_codec_tool
# Generated by qmake (2.01a) (Qt 4.8.0) on: Wed Mar 28 18:15:02 2012
# Project:  amg_codec_tool.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_STATIC_BUILD -DUNICODE -DQT_LARGEFILE_SUPPORT -DSTATIC -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT
CFLAGS        = -Os -momit-leaf-frame-pointer -Wall $(DEFINES)
CXXFLAGS      = -Os -momit-leaf-frame-pointer -frtti -fno-exceptions -Wall $(DEFINES)
INCPATH       = -I"c:\QtSDK\Desktop\Qt_Static\4.8.0\include\QtCore" -I"c:\QtSDK\Desktop\Qt_Static\4.8.0\include\QtGui" -I"c:\QtSDK\Desktop\Qt_Static\4.8.0\include\QtXml" -I"c:\QtSDK\Desktop\Qt_Static\4.8.0\include" -I"c:\QtSDK\Desktop\Qt_Static\4.8.0\include\ActiveQt" -I"release" -I"c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -static -static-libgcc -Wl,-enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -Wl,-subsystem,console
LIBS        =        -L"c:\QtSDK\Desktop\Qt_Static\4.8.0\lib" -LC:/QtSDK/Desktop/Qt_Static/4.8.0/plugins/codecs -lqjpcodecs -lQtXml -lQtGui -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lmsimg32 -lQtCore -lole32 -luuid -lws2_32 -ladvapi32 -lshell32 -luser32 -lkernel32 
QMAKE         = c:\qtsdk\desktop\qt_static\4.8.0\bin\qmake.exe
IDC           = c:\QtSDK\Desktop\Qt_Static\4.8.0\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		arcreader.cpp \
		arcwriter.cpp \
		arcpacker.cpp \
		scfencoder.cpp \
		scfdecoder.cpp \
		module.cpp \
		langdb.cpp 
OBJECTS       = release/main.o \
		release/arcreader.o \
		release/arcwriter.o \
		release/arcpacker.o \
		release/scfencoder.o \
		release/scfdecoder.o \
		release/module.o \
		release/langdb.o
DIST          = 
QMAKE_TARGET  = amg_codec_tool
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = amg_codec_tool.exe
DESTDIR_TARGET = release\amg_codec_tool.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)

qmake:  FORCE
	@$(QMAKE) -spec c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\win32-g++ -config release CONFIG+=release -o Makefile.Release amg_codec_tool.pro

dist:
	$(ZIP) amg_codec_tool.zip $(SOURCES) $(DIST) amg_codec_tool.pro c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\qconfig.pri c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\qt_functions.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\qt_config.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\exclusive_builds.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\default_pre.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\win32\default_pre.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\release.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\debug_and_release.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\default_post.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\win32\default_post.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\build_pass.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\staticlib.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\static.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\win32\console.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\win32\rtti.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\win32\exceptions_off.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\win32\stl.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\warn_on.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\qt.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\win32\thread.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\moc.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\resources.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\uic.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\yacc.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\lex.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\mkspecs\features\include_source_dir.prf c:\QtSDK\Desktop\Qt_Static\4.8.0\lib\QtXml.prl c:\QtSDK\Desktop\Qt_Static\4.8.0\lib\QtGui.prl c:\QtSDK\Desktop\Qt_Static\4.8.0\lib\QtCore.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\arcreader.o release\arcwriter.o release\arcpacker.o release\scfencoder.o release\scfdecoder.o release\module.o release\langdb.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

release/main.o: main.cpp langdb.h \
		defines.h \
		xmlhelpers.h \
		arcreader.h \
		datatypes.h \
		module.h \
		arcwriter.h \
		arcpacker.h \
		scfdecoder.h \
		scfencoder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/arcreader.o: arcreader.cpp arcreader.h \
		datatypes.h \
		module.h \
		defines.h \
		xmlhelpers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\arcreader.o arcreader.cpp

release/arcwriter.o: arcwriter.cpp arcwriter.h \
		datatypes.h \
		module.h \
		defines.h \
		xmlhelpers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\arcwriter.o arcwriter.cpp

release/arcpacker.o: arcpacker.cpp arcpacker.h \
		datatypes.h \
		module.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\arcpacker.o arcpacker.cpp

release/scfencoder.o: scfencoder.cpp langdb.h \
		defines.h \
		xmlhelpers.h \
		scfencoder.h \
		module.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\scfencoder.o scfencoder.cpp

release/scfdecoder.o: scfdecoder.cpp defines.h \
		xmlhelpers.h \
		scfdecoder.h \
		module.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\scfdecoder.o scfdecoder.cpp

release/module.o: module.cpp module.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\module.o module.cpp

release/langdb.o: langdb.cpp langdb.h \
		defines.h \
		xmlhelpers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\langdb.o langdb.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

